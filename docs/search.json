[
  {
    "objectID": "02_flagtest.html",
    "href": "02_flagtest.html",
    "title": "Core",
    "section": "",
    "text": "input:false\n\ndef add3(a,b,c): return a+b+c\n\necho:false\n\ndef add3(a,b,c): return a+b+c\n\necho:fenced\n\ndef add3(a,b,c): return a+b+c\n\ncode-fold:true\n\nt = np.arange(0.0, 2.0, 0.01)\ns = 1 + np.sin(2 * np.pi * t)\n\nfig, ax = plt.subplots()\nax.plot(t, s)\n\nax.set(xlabel='time (s)', ylabel='voltage (mV)',\n       title='About as simple as it gets, folks')\nax.grid()\n\nfig.savefig(\"test.png\")\nplt.show()\n\n\n\n\ncode-overflow:scroll\n\nfor really_long_named_number in [1, 2, 3, 4, 5, 6]: print(really_long_named_number + really_long_named_number * really_long_named_number / really_long_named_number - really_long_named_number**2)\n\n1.0\n0.0\n-3.0\n-8.0\n-15.0\n-24.0\n\n\ncode-overflow:wrap\n\nfor really_long_named_number in [1, 2, 3, 4, 5, 6]: print(really_long_named_number + really_long_named_number * really_long_named_number / really_long_named_number - really_long_named_number**2)\n\n1.0\n0.0\n-3.0\n-8.0\n-15.0\n-24.0\n\n\ncode-line-numbers: true\n\nt = np.arange(0.0, 2.0, 0.01)\ns = 1 + np.sin(2 * np.pi * t)\n\nfig, ax = plt.subplots()\nax.plot(t, s)\n\nax.set(xlabel='time (s)', ylabel='voltage (mV)',\n       title='About as simple as it gets, folks')\nax.grid()\n\nfig.savefig(\"test.png\")\nplt.show()\n\n\n\n\ncode-line-numbers: 1-3|1-3,5|5-10|1-10\n\nt = np.arange(0.0, 2.0, 0.01)\ns = 1 + np.sin(2 * np.pi * t)\n\nfig, ax = plt.subplots()\nax.plot(t, s)\n\nax.set(xlabel='time (s)', ylabel='voltage (mV)',\n       title='About as simple as it gets, folks')\nax.grid()\n\nfig.savefig(\"test.png\")\nplt.show()\n\n\n\n\noutput:false\n\nt = np.arange(0.0, 2.0, 0.01)\ns = 1 + np.sin(2 * np.pi * t)\n\nfig, ax = plt.subplots()\nax.plot(t, s)\n\nax.set(xlabel='time (s)', ylabel='voltage (mV)',\n       title='About as simple as it gets, folks')\nax.grid()\n\nfig.savefig(\"test.png\")\nplt.show()\n\n\n\n\nfig-link: somefile.txt\n\nt = np.arange(0.0, 2.0, 0.01)\ns = 1 + np.sin(2 * np.pi * t)\n\nfig, ax = plt.subplots()\nax.plot(t, s)\n\nax.set(xlabel='time (s)', ylabel='voltage (mV)',\n       title='About as simple as it gets, folks')\nax.grid()\n\nfig.savefig(\"test.png\")\nplt.show()"
  },
  {
    "objectID": "01_core.html",
    "href": "01_core.html",
    "title": "Core",
    "section": "",
    "text": "assert add3(2,3,4)==9"
  }
]